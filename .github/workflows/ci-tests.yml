name: Microservices CI - Run Tests on Commit to Main

on:
  push:
    branches:
      - main

jobs:
  node-tests:
    name: Image Service (Node.js)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: medical_records_image_service

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.15.0'

      - name: Check Node + npm
        run: |
          node -v
          npm -v
          which npm

      - name: Remove node_modules (clean install)
        run: rm -rf node_modules

      - name: Install dependencies
        run: npm install

      - name: Make Jest executable
        run: chmod +x node_modules/.bin/jest

      - name: Run tests
        run: npx jest

  user-service-tests:
    name: User Service (Spring Boot)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: medical_records_user_service

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Run tests
        run: bash ./mvnw test

  records-service-tests:
    name: Records Service (Spring Boot)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: medical_records_records_service

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Run tests
        run: bash ./mvnw test

  message-service-tests:
    name: Message Service (Spring Boot)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: medical_records_message_service

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Run tests
        run: bash ./mvnw test

  search-service-tests:
    name: Search Service (Quarkus)
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: medical_records_search_service

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Run tests
        run: bash ./mvnw test

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs:
      - node-tests
      - user-service-tests
      - records-service-tests
      - message-service-tests
      - search-service-tests

    env:
      REGISTRY: ghcr.io
      USERNAME: Felhen

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push all images
        run: |
          services=(
            medical_records_image_service
            medical_records_user_service
            medical_records_records_service
            medical_records_message_service
            medical_records_search_service
            medical_records_front
          )

          for service in "${services[@]}"; do
            image_name="ghcr.io/felhen/${service//_/-}:latest"
            echo "Building $image_name from $service..."
            docker build -t "$image_name" ./$service
            docker push "$image_name"
          done

