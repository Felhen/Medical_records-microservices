services:
  mysql:
    image: mysql:8.0
    restart: always
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - medical_network

  user-service:
    build:
      context: ./medical_records_user_service
      dockerfile: Dockerfile
    container_name: user_service
    ports:
      - "8084:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_ROOT_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      KEYCLOAK_AUTH_SERVER_URL: http://host.docker.internal:8080
      KEYCLOAK_REALM: medical-records
      KEYCLOAK_RESOURCE: medical_app_reg
      KEYCLOAK_CREDENTIALS_SECRET: ${KEYCLOAK_CLIENT_SECRET}
    depends_on:
      - mysql
    networks:
      - medical_network

  message-service:
    build:
      context: ./medical_records_message_service
      dockerfile: Dockerfile
    container_name: message_service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_ROOT_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - mysql
    networks:
      - medical_network

  records-service:
    build:
      context: ./medical_records_records_service
      dockerfile: Dockerfile
    container_name: records_service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_ROOT_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - mysql
      - user-service
    networks:
      - medical_network

  search-service:
    build:
      context: ./medical_records_search_service
      dockerfile: Dockerfile
    container_name: search_service
    ports:
      - "8083:8083"
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE}
      QUARKUS_DATASOURCE_USERNAME: ${MYSQL_ROOT_USERNAME}
      QUARKUS_DATASOURCE_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      QUARKUS_OIDC_AUTH_SERVER_URL: http://host.docker.internal:8080/realms/medical-records
      QUARKUS_OIDC_CLIENT_ID: medical_app
      QUARKUS_OIDC_CREDENTIALS_SECRET: ${KEYCLOAK_CLIENT_SECRET}
    depends_on:
      - mysql
    networks:
      - medical_network

  image-service:
    build:
      context: ./medical_records_image_service
      dockerfile: Dockerfile
    container_name: image_service
    ports:
      - "5000:5000"
    depends_on:
      - mysql
    networks:
      - medical_network

  frontend:
    build:
      context: ./medical_records_front
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    networks:
      - medical_network

volumes:
  mysql-data:

networks:
  medical_network:
